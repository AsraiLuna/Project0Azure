// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Project_0.Models.Customer", b =>
                {
                    b.Property<string>("CustomerID")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<int>("StoreID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CustomerID");

                    b.HasIndex("StoreID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Project_0.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PotionID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PotionQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoreID")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventoryID");

                    b.HasIndex("PotionID");

                    b.HasIndex("StoreID");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("Project_0.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("HealthPotionsBought")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManaPotionsBought")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StaminaPotionsBought")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoreID")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("StoreID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Project_0.Models.Potions", b =>
                {
                    b.Property<int>("PotionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PotionDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("PotionName")
                        .HasColumnType("TEXT");

                    b.Property<int>("PotionPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("PotionID");

                    b.ToTable("Potions");
                });

            modelBuilder.Entity("Project_0.Models.Store", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoreName")
                        .HasColumnType("TEXT");

                    b.HasKey("StoreID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Project_0.Models.Customer", b =>
                {
                    b.HasOne("Project_0.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_0.Models.Inventory", b =>
                {
                    b.HasOne("Project_0.Models.Potions", "Potion")
                        .WithMany()
                        .HasForeignKey("PotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_0.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_0.Models.Order", b =>
                {
                    b.HasOne("Project_0.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("Project_0.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
